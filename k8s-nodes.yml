- hosts: k8s-nodes
  remote_user: root
  tasks:

  - name: Set authorized key for kyoshiro
    authorized_key:
      user: kyoshiro
      state: present
      key: "{{ lookup('file', '/home/kyoshiro/.ssh/authorized_keys') }}"

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Remove a list of apt packages
    apt:
      name: "{{ packages }}"
      state: absent
      update_cache: no
    vars:
      packages:
        - cockpit-docker
        - docker.io

  - name: Initialize LXD
    script: ./init_lxd.sh
    args:
      creates: /root/.lxd_init

  - name: Update hosts file
    lineinfile:
      dest: /etc/hosts
      line: "{{ hostvars[item].ansible_host }} {{ item }}"
      regexp: '.*{{ item }}$'
    with_items: "{{ groups.all }}"

  - name: Update host name
    hostname:
      name: "{{ inventory_hostname }}"

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Install a list of apt packages
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - git
        - selinux-policy-default

  - name: Prepare Kubernetes packages by snap
    snap:
      name: "{{ snap_packages }}"
      state: present
      classic: yes
    vars:
      snap_packages:
        - helm

  - name: Enable memory control group subsystem
    replace:
      # https://wiki.ubuntu.com/ARM/RaspberryPi#Raspberry_Pi_packages
      path: /boot/cmdline.txt
      regexp: '(rootwait)$'
      replace: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory'


